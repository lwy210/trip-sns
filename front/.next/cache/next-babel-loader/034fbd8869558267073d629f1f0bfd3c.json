{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport AppLayout from '../components/AppLayout';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\n\nconst Home = () => {\n  // useEffect로 컴포넌트 마운트 효과를 넣을 수 있다. 뒤에 빈배열만 넣는 다면.\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch({\n      type: LOAD_POSTS_REQUEST\n    });\n  }, []);\n  useEffect(() => {\n    function onScroll() {\n      console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\n    } // 스크롤 끝까지 내렸을 때 게시글 더 로드해서 다시 내려가게 하는 거\n\n\n    if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\n      dispatch({\n        type: LOAD_POSTS_REQUEST\n      });\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, []);\n  const {\n    me\n  } = useSelector(state => state.user);\n  const {\n    mainPosts\n  } = useSelector(state => state.post);\n  return __jsx(AppLayout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }, me && __jsx(PostForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 20\n    }\n  }), mainPosts.map(post => __jsx(PostCard, {\n    key: post.id,\n    post: post,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 38\n    }\n  })));\n};\n\nexport default Home;","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","AppLayout","PostForm","PostCard","LOAD_POSTS_REQUEST","Home","dispatch","type","onScroll","console","log","window","scrollY","document","documentElement","clientHeight","scrollHeight","addEventListener","removeEventListener","me","state","user","mainPosts","post","map","id"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/pages/index.js"],"sourcesContent":["import React, {useEffect} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport AppLayout from '../components/AppLayout';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { LOAD_POSTS_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n    // useEffect로 컴포넌트 마운트 효과를 넣을 수 있다. 뒤에 빈배열만 넣는 다면.\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch({\r\n            type: LOAD_POSTS_REQUEST\r\n        });\r\n    }, []);\r\n\r\n\r\n    useEffect(() => {\r\n        function onScroll() {\r\n            console.log(window.scrollY, document.documentElement.clientHeight, document.documentElement.scrollHeight);\r\n        }\r\n        // 스크롤 끝까지 내렸을 때 게시글 더 로드해서 다시 내려가게 하는 거\r\n        if (window.scrollY + document.documentElement.clientHeight === document.documentElement.scrollHeight) {\r\n            dispatch({\r\n                type: LOAD_POSTS_REQUEST,\r\n            });\r\n        }\r\n\r\n        window.addEventListener('scroll', onScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', onScroll);\r\n        }\r\n    }, []);\r\n\r\n    const { me } = useSelector((state) => state.user);\r\n    const { mainPosts } = useSelector((state) => state.post);\r\n    return (\r\n        <AppLayout>\r\n            {me && <PostForm />}\r\n            {mainPosts.map((post) => <PostCard key={post.id} post={post} />)}\r\n        </AppLayout>\r\n    );\r\n}\r\n\r\nexport default Home; "],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,kBAAT,QAAmC,kBAAnC;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACf;EACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACAD,SAAS,CAAC,MAAM;IACZQ,QAAQ,CAAC;MACLC,IAAI,EAAEH;IADD,CAAD,CAAR;EAGH,CAJQ,EAIN,EAJM,CAAT;EAOAN,SAAS,CAAC,MAAM;IACZ,SAASU,QAAT,GAAoB;MAChBC,OAAO,CAACC,GAAR,CAAYC,MAAM,CAACC,OAAnB,EAA4BC,QAAQ,CAACC,eAAT,CAAyBC,YAArD,EAAmEF,QAAQ,CAACC,eAAT,CAAyBE,YAA5F;IACH,CAHW,CAIZ;;;IACA,IAAIL,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,KAA2DF,QAAQ,CAACC,eAAT,CAAyBE,YAAxF,EAAsG;MAClGV,QAAQ,CAAC;QACLC,IAAI,EAAEH;MADD,CAAD,CAAR;IAGH;;IAEDO,MAAM,CAACM,gBAAP,CAAwB,QAAxB,EAAkCT,QAAlC;IACA,OAAO,MAAM;MACTG,MAAM,CAACO,mBAAP,CAA2B,QAA3B,EAAqCV,QAArC;IACH,CAFD;EAGH,CAfQ,EAeN,EAfM,CAAT;EAiBA,MAAM;IAAEW;EAAF,IAASnB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1B;EACA,MAAM;IAAEC;EAAF,IAAgBtB,WAAW,CAAEoB,KAAD,IAAWA,KAAK,CAACG,IAAlB,CAAjC;EACA,OACI,MAAC,SAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKJ,EAAE,IAAI,MAAC,QAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADX,EAEKG,SAAS,CAACE,GAAV,CAAeD,IAAD,IAAU,MAAC,QAAD;IAAU,GAAG,EAAEA,IAAI,CAACE,EAApB;IAAwB,IAAI,EAAEF,IAA9B;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EAAxB,CAFL,CADJ;AAMH,CAnCD;;AAqCA,eAAelB,IAAf"},"metadata":{},"sourceType":"module"}