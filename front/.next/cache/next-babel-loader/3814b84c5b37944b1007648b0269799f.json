{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\CommentForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from \"antd\";\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nvar CommentForm = function CommentForm(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var id = useSelector(function (state) {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      addCommentDone = _useSelector.addCommentDone;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      commentText = _useInput2[0],\n      onChangeCommentText = _useInput2[1],\n      setCommentText = _useInput2[2];\n\n  useEffect(function () {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  var onSubmitComment = useCallback(function () {\n    dispatchEvent({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\n_s(CommentForm, \"QZHI4dAVbCL/SPmhgHNDtREk9Gk=\", false, function () {\n  return [useSelector, useSelector, useInput];\n});\n\n_c = CommentForm;\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentForm\");","map":{"version":3,"names":["Form","Input","Button","PropTypes","React","useCallback","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","useEffect","onSubmitComment","dispatchEvent","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/CommentForm.js"],"sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport PropTypes from 'prop-types';\r\nimport React, { useCallback } from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const { addCommentDone } = useSelector((state) => state.post);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if (addCommentDone) {\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone]);\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        dispatchEvent({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id},\r\n        });\r\n    }, [commentText, id]);\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position: 'relative', margin: 0}}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button style={{position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"],"mappings":";;;;;;;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAAc;EAAA;;EAAA,IAAXC,IAAW,QAAXA,IAAW;EAC9B,IAAMC,EAAE,GAAGL,WAAW,CAAC,UAACM,KAAD;IAAA;;IAAA,yBAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;EAAA,CAAD,CAAtB;;EACA,mBAA2BL,WAAW,CAAC,UAACM,KAAD;IAAA,OAAWA,KAAK,CAACF,IAAjB;EAAA,CAAD,CAAtC;EAAA,IAAQK,cAAR,gBAAQA,cAAR;;EACA,gBAA2DR,QAAQ,CAAC,EAAD,CAAnE;EAAA;EAAA,IAAOS,WAAP;EAAA,IAAoBC,mBAApB;EAAA,IAAyCC,cAAzC;;EAEAC,SAAS,CAAC,YAAM;IACZ,IAAIJ,cAAJ,EAAoB;MAChBG,cAAc,CAAC,EAAD,CAAd;IACH;EACJ,CAJQ,EAIN,CAACH,cAAD,CAJM,CAAT;EAMA,IAAMK,eAAe,GAAGf,WAAW,CAAC,YAAM;IACtCgB,aAAa,CAAC;MACVC,IAAI,EAAEd,mBADI;MAEVe,IAAI,EAAE;QAAEC,OAAO,EAAER,WAAX;QAAwBS,MAAM,EAAEf,IAAI,CAACC,EAArC;QAAyCe,MAAM,EAAEf;MAAjD;IAFI,CAAD,CAAb;EAIH,CALkC,EAKhC,CAACK,WAAD,EAAcL,EAAd,CALgC,CAAnC;EAMA,OACI,MAAC,IAAD;IAAM,QAAQ,EAAES,eAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,IAAD,CAAM,IAAN;IAAW,KAAK,EAAE;MAACO,QAAQ,EAAE,UAAX;MAAuBC,MAAM,EAAE;IAA/B,CAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,KAAD,CAAO,QAAP;IAAgB,KAAK,EAAEZ,WAAvB;IAAoC,QAAQ,EAAEC,mBAA9C;IAAmE,IAAI,EAAE,CAAzE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,EAEI,MAAC,MAAD;IAAQ,KAAK,EAAE;MAACU,QAAQ,EAAE,UAAX;MAAuBE,KAAK,EAAE,CAA9B;MAAiCC,MAAM,EAAE,CAAC;IAA1C,CAAf;IAA+D,IAAI,EAAC,SAApE;IAA8E,QAAQ,EAAC,QAAvF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAFJ,CADJ,CADJ;AAQH,CAzBD;;GAAMrB,W;UACSH,W,EACgBA,W,EACgCC,Q;;;KAHzDE,W;AA2BNA,WAAW,CAACsB,SAAZ,GAAwB;EACpBrB,IAAI,EAAEP,SAAS,CAAC6B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAexB,WAAf"},"metadata":{},"sourceType":"module"}