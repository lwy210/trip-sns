{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport { Form, Input, Button, Modal, DatePicker, Radio, Segmented } from 'antd';\nimport { daysInWeek } from 'date-fns';\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPost } from '../reducers/post';\nimport PostRoutesForm from './PostRoutesForm';\n\nconst PostForm = () => {\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const {\n    0: isModalOpen,\n    1: setIsModalOpen\n  } = useState(false);\n  const {\n    0: isModal2Open,\n    1: setIsModal2Open\n  } = useState(false);\n  const {\n    0: isRadioOpen,\n    1: setIsRadioOpen\n  } = useState(false);\n  const [text, onChangeText, setText] = useInput('');\n  const imageInput = useRef();\n  const {\n    RangePicker\n  } = DatePicker;\n  const {\n    0: DateList,\n    1: setDateList\n  } = useState([]);\n\n  const showModal = () => {\n    setIsModalOpen(true);\n  };\n\n  const showModal2 = () => {\n    setIsModal2Open(true);\n  };\n\n  const handleOk = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleOk2 = () => {\n    setIsModal2Open(false);\n  };\n\n  const handleCancle = () => {\n    setIsModalOpen(false);\n  };\n\n  const handleCancle2 = () => {\n    setIsModal2Open(false);\n  };\n\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  const [title, onChangeTitle] = useInput('');\n  const [mainTexts, onChangeMainTexts] = useInput('');\n  const onSubmitForm = useCallback(() => {\n    console.log(title, mainTexts);\n  }, [title, mainTexts]);\n  var btDay = 0;\n  var startDate;\n  var endDate;\n  var DateArray = [];\n\n  const makeDateRadio = () => {\n    console.log(btDay);\n    var D = startDate;\n\n    for (var i = 0; i < btDay; i++) {\n      //DateArray.push([D.getFullYear(), D.getMonth(), D.getDate()]);\n      DateArray.push(D.getFullYear() + '년 ' + (D.getMonth() + 1) + '월 ' + D.getDate() + '일');\n      D.setDate(D.getDate() + 1);\n    }\n\n    console.log(DateArray);\n    setDateList(DateArray);\n    setIsRadioOpen(true);\n  };\n\n  const onChangeDate = range => {\n    const Date1 = range[0].format();\n    const Date2 = range[1].format();\n    var year1 = Date1.substring(0, 4);\n    var year2 = Date2.substring(0, 4);\n    var month1 = Date1.substring(5, 7);\n    var month2 = Date2.substring(5, 7);\n    var day1 = Date1.substring(8, 10);\n    var day2 = Date2.substring(8, 10);\n    startDate = new Date(year1, month1 - 1, day1);\n    endDate = new Date(year2, month2 - 1, day2);\n    var btMs = endDate.getTime() - startDate.getTime();\n    btDay = btMs / (1000 * 60 * 60 * 24) + 1;\n    console.log('start date', Date1);\n    console.log('end date', Date2);\n    console.log('start date', startDate);\n    console.log('end date', endDate);\n    console.log('day', btDay);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    block: true,\n    onClick: showModal,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"+ \\uB0B4 \\uC5EC\\uD589 \\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"), __jsx(Modal, {\n    title: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\\uD558\\uAE30\",\n    open: isModalOpen,\n    onOk: handleOk,\n    onCancel: handleCancle,\n    footer: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, __jsx(Form, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 17\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 21\n    }\n  }, __jsx(Input, {\n    value: title,\n    onChange: onChangeTitle,\n    style: {\n      margin: '5px 0px'\n    },\n    placeholder: \"\\uAC8C\\uC2DC\\uAE00 \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 32\n    }\n  })), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 21\n    }\n  }, __jsx(Input.TextArea, {\n    value: mainTexts,\n    style: {\n      margin: '5px 0px'\n    },\n    onChange: onChangeMainTexts,\n    maxLength: 140,\n    placeholder: \"\\uAC8C\\uC2DC\\uAE00 \\uBCF8\\uBB38\\uC744 \\uC791\\uC131\\uD558\\uC138\\uC694.\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 32\n    }\n  })), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 21\n    }\n  }, __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 25\n    }\n  }, \"+ \\uC0AC\\uC9C4 \\uC5C5\\uB85C\\uB4DC\"))), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 21\n    }\n  }, __jsx(Button, {\n    key: \"add trip route\",\n    type: \"button\",\n    onClick: showModal2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 25\n    }\n  }, \"\\uC5EC\\uD589 \\uACBD\\uB85C \\uCD94\\uAC00\"), \",\", __jsx(Button, {\n    key: \"post\",\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \"\\uAC8C\\uC2DC\")))), __jsx(React.Fragment, null, __jsx(Modal, {\n    title: \"\\uC5EC\\uD589 \\uB8E8\\uD2B8\",\n    open: isModal2Open,\n    onOk: handleOk2,\n    onCancel: handleCancle2,\n    footer: [],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, __jsx(Form, {\n    onFinish: onSubmitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  }, __jsx(RangePicker, {\n    size: \"middle\",\n    onChange: onChangeDate,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 29\n    }\n  })), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    key: \"post\",\n    type: \"button\",\n    onClick: makeDateRadio,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 29\n    }\n  }, \"\\uB0A0\\uC9DC \\uC124\\uC815\")), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 25\n    }\n  }, __jsx(Segmented, {\n    size: \"small\",\n    options: DateList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 29\n    }\n  }))), __jsx(Form, {\n    name: \"dynamic_form_nest_item\",\n    onFinish: onFinish,\n    autoComplete: \"off\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }, __jsx(Form.List, {\n    name: \"users\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }, (fields, {\n    add,\n    remove\n  }) => __jsx(React.Fragment, null, fields.map(_ref => {\n    let {\n      key,\n      name\n    } = _ref,\n        restField = _objectWithoutProperties(_ref, [\"key\", \"name\"]);\n\n    return __jsx(Space, {\n      key: key,\n      style: {\n        display: 'flex',\n        marginBottom: 8\n      },\n      align: \"baseline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 15\n      }\n    }, __jsx(Form.Item, _extends({}, restField, {\n      name: [name, 'first'],\n      rules: [{\n        required: true,\n        message: 'Missing first name'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }\n    }), __jsx(Input, {\n      placeholder: \"First Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 19\n      }\n    })), __jsx(Form.Item, _extends({}, restField, {\n      name: [name, 'last'],\n      rules: [{\n        required: true,\n        message: 'Missing last name'\n      }],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }\n    }), __jsx(Input, {\n      placeholder: \"Last Name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 19\n      }\n    })), __jsx(MinusCircleOutlined, {\n      onClick: () => remove(name),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 17\n      }\n    }));\n  }), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    type: \"dashed\",\n    onClick: () => add(),\n    block: true,\n    icon: __jsx(PlusOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 71\n      }\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 15\n    }\n  }, \"Add field\")))), __jsx(Form.Item, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 9\n    }\n  }, \"Submit\")))))); // const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  // const dispatch = useDispatch();\n  // const imageInput = useRef();\n  // const [text, onChangeText, setText] = useInput('');\n  // useEffect(() => {\n  //     if (addPostDone) {\n  //         setText('');\n  //     }\n  // }, [addPostDone]);\n  // const onSubmit = useCallback(() => {\n  //     dispatch(addPost(text));\n  // }, [text]);\n  // const onClickImageUpload = useCallback(()=> {\n  //     imageInput.current.click();\n  // }, [imageInput.current]);\n  // return (\n  //     <Form style={{margin: '10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit}>\n  //         <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\n  //         <div>\n  //             <input type=\"file\" multiple hidden ref={imageInput}/>\n  //             <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n  //             <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">짹짹</Button>\n  //         </div>\n  //         <div>\n  //             {imagePaths.map((v) => (\n  //                 <div key={v} style={{display:'inline-block'}}>\n  //                     <img src={v} style={{width:'200px'}} alt={v} />\n  //                     <div>\n  //                         <Button>제거</Button>\n  //                     </div>\n  //                 </div>\n  //             ))}\n  //         </div>\n  //     </Form>\n  // )\n};\n\nexport default PostForm;","map":{"version":3,"names":["Form","Input","Button","Modal","DatePicker","Radio","Segmented","daysInWeek","React","useCallback","useState","useRef","useEffect","useDispatch","useSelector","useInput","addPost","PostRoutesForm","PostForm","imagePaths","addPostDone","state","post","isModalOpen","setIsModalOpen","isModal2Open","setIsModal2Open","isRadioOpen","setIsRadioOpen","text","onChangeText","setText","imageInput","RangePicker","DateList","setDateList","showModal","showModal2","handleOk","handleOk2","handleCancle","handleCancle2","onClickImageUpload","current","click","title","onChangeTitle","mainTexts","onChangeMainTexts","onSubmitForm","console","log","btDay","startDate","endDate","DateArray","makeDateRadio","D","i","push","getFullYear","getMonth","getDate","setDate","onChangeDate","range","Date1","format","Date2","year1","substring","year2","month1","month2","day1","day2","Date","btMs","getTime","margin","onFinish","fields","add","remove","map","key","name","restField","display","marginBottom","required","message"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button, Modal, DatePicker, Radio, Segmented } from 'antd';\r\nimport { daysInWeek } from 'date-fns';\r\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { addPost } from '../reducers/post';\r\nimport PostRoutesForm from './PostRoutesForm';\r\n\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [isModal2Open, setIsModal2Open] = useState(false);\r\n    const [isRadioOpen, setIsRadioOpen] = useState(false);\r\n    const [text, onChangeText, setText] = useInput('');\r\n    const imageInput = useRef();\r\n    const { RangePicker } = DatePicker;\r\n    const [DateList, setDateList] = useState([]);\r\n\r\n\r\n    const showModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const showModal2 = () => {\r\n        setIsModal2Open(true);\r\n    };\r\n\r\n\r\n    const handleOk = () => {\r\n        setIsModalOpen(false);\r\n    }\r\n\r\n    const handleOk2 = () => {\r\n        setIsModal2Open(false);\r\n    }\r\n\r\n    const handleCancle = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const handleCancle2 = () => {\r\n        setIsModal2Open(false);\r\n    };\r\n\r\n\r\n    const onClickImageUpload = useCallback(()=> {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    const [title, onChangeTitle] = useInput('');\r\n    const [mainTexts, onChangeMainTexts] = useInput('');\r\n\r\n    const onSubmitForm = useCallback(() => {\r\n        console.log(title, mainTexts)\r\n    }, [title, mainTexts]);\r\n\r\n\r\n    var btDay = 0;\r\n    var startDate;\r\n    var endDate;\r\n    var DateArray = [];\r\n\r\n    const makeDateRadio = () => {\r\n        console.log(btDay);\r\n        var D = startDate;\r\n        \r\n        for(var i=0; i<btDay; i++) {\r\n            //DateArray.push([D.getFullYear(), D.getMonth(), D.getDate()]);\r\n            DateArray.push(D.getFullYear() + '년 ' + (D.getMonth() + 1) + '월 ' + D.getDate() + '일');\r\n            D.setDate(D.getDate() + 1);\r\n        }\r\n\r\n        console.log(DateArray);\r\n        setDateList(DateArray);\r\n        setIsRadioOpen(true);\r\n    }\r\n\r\n    const onChangeDate = (range) => {\r\n        const Date1 = range[0].format();\r\n        const Date2 = range[1].format();\r\n\r\n        var year1 = Date1.substring(0, 4);\r\n        var year2 = Date2.substring(0, 4);\r\n        var month1 = Date1.substring(5, 7);\r\n        var month2 = Date2.substring(5, 7);\r\n        var day1 = Date1.substring(8, 10);\r\n        var day2 = Date2.substring(8, 10);\r\n\r\n        startDate = new Date(year1, month1-1, day1);\r\n        endDate = new Date(year2, month2-1, day2);\r\n\r\n        var btMs = endDate.getTime() - startDate.getTime();\r\n        btDay = btMs / (1000*60*60*24) + 1;\r\n        \r\n\r\n        console.log('start date', Date1);\r\n        console.log('end date', Date2);\r\n        console.log('start date', startDate);\r\n        console.log('end date', endDate);\r\n        console.log('day', btDay)\r\n\r\n\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Button block onClick={showModal}>+ 내 여행 게시글 작성하기</Button>\r\n            <Modal \r\n                title=\"게시글 작성하기\" \r\n                open={isModalOpen} \r\n                onOk={handleOk} \r\n                onCancel={handleCancle}\r\n                footer={[\r\n                ]}>\r\n                <Form onFinish={onSubmitForm}>\r\n                    <Form.Item><Input value={title} onChange={onChangeTitle} style={{margin: '5px 0px'}} placeholder=\"게시글 제목을 입력하세요\" /></Form.Item>\r\n                    <Form.Item><Input.TextArea value={mainTexts} style={{margin: '5px 0px'}} onChange={onChangeMainTexts} maxLength={140} placeholder=\"게시글 본문을 작성하세요.\" /></Form.Item>\r\n                    <Form.Item>\r\n                        <div>\r\n                        <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                        <Button onClick={onClickImageUpload}>+ 사진 업로드</Button> \r\n                        </div>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button key=\"add trip route\" type=\"button\" onClick={showModal2}>여행 경로 추가</Button>,\r\n                        <Button key=\"post\" type=\"primary\" htmlType=\"submit\">게시</Button>\r\n                    </Form.Item>\r\n                </Form>\r\n            </Modal>\r\n            <>\r\n                <Modal \r\n                    title=\"여행 루트\" \r\n                    open={isModal2Open} \r\n                    onOk={handleOk2} \r\n                    onCancel={handleCancle2}\r\n                    footer={[\r\n                    ]}>\r\n                    <Form onFinish={onSubmitForm}>\r\n                        <Form.Item>\r\n                            <RangePicker size=\"middle\" onChange={onChangeDate}/>\r\n                        </Form.Item>\r\n                        <Form.Item>\r\n                            <Button key=\"post\" type=\"button\" onClick={makeDateRadio}>날짜 설정</Button>\r\n                        </Form.Item>\r\n                        {/* <Form.Item>\r\n                            <Radio.Group>\r\n                                {isRadioOpen && DateArray.map((v) => <Radio.Button>{v[0] + `년` + v[1]+1 + `월` + v[2] + `일`}</Radio.Button>)}\r\n                            </Radio.Group>\r\n                        </Form.Item> */}\r\n                        <Form.Item>\r\n                            <Segmented size=\"small\" options={DateList} />\r\n                            {/* {isRadioOpen && <Segmented size=\"small\" options={DateArray} />} */}\r\n                            {/* <Segmented size=\"small\" options={['a', 'b', 'c']} /> */}\r\n                        </Form.Item>\r\n\r\n                    </Form>\r\n                    <Form name=\"dynamic_form_nest_item\" onFinish={onFinish} autoComplete=\"off\">\r\n      <Form.List name=\"users\">\r\n        {(fields, { add, remove }) => (\r\n          <>\r\n            {fields.map(({ key, name, ...restField }) => (\r\n              <Space key={key} style={{ display: 'flex', marginBottom: 8 }} align=\"baseline\">\r\n                <Form.Item\r\n                  {...restField}\r\n                  name={[name, 'first']}\r\n                  rules={[{ required: true, message: 'Missing first name' }]}\r\n                >\r\n                  <Input placeholder=\"First Name\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                  {...restField}\r\n                  name={[name, 'last']}\r\n                  rules={[{ required: true, message: 'Missing last name' }]}\r\n                >\r\n                  <Input placeholder=\"Last Name\" />\r\n                </Form.Item>\r\n                <MinusCircleOutlined onClick={() => remove(name)} />\r\n              </Space>\r\n            ))}\r\n            <Form.Item>\r\n              <Button type=\"dashed\" onClick={() => add()} block icon={<PlusOutlined />}>\r\n                Add field\r\n              </Button>\r\n            </Form.Item>\r\n          </>\r\n        )}\r\n      </Form.List>\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n                </Modal>\r\n            \r\n            </>\r\n        \r\n        </>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n    // const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    // const dispatch = useDispatch();\r\n    // const imageInput = useRef();\r\n    // const [text, onChangeText, setText] = useInput('');\r\n\r\n    // useEffect(() => {\r\n    //     if (addPostDone) {\r\n    //         setText('');\r\n    //     }\r\n    // }, [addPostDone]);\r\n\r\n\r\n    // const onSubmit = useCallback(() => {\r\n    //     dispatch(addPost(text));\r\n\r\n    // }, [text]);\r\n\r\n    // const onClickImageUpload = useCallback(()=> {\r\n    //     imageInput.current.click();\r\n    // }, [imageInput.current]);\r\n    // return (\r\n    //     <Form style={{margin: '10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit}>\r\n    //         <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\r\n    //         <div>\r\n    //             <input type=\"file\" multiple hidden ref={imageInput}/>\r\n    //             <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n    //             <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">짹짹</Button>\r\n    //         </div>\r\n    //         <div>\r\n    //             {imagePaths.map((v) => (\r\n    //                 <div key={v} style={{display:'inline-block'}}>\r\n    //                     <img src={v} style={{width:'200px'}} alt={v} />\r\n    //                     <div>\r\n    //                         <Button>제거</Button>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             ))}\r\n    //         </div>\r\n    //     </Form>\r\n    // )\r\n};\r\n\r\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}