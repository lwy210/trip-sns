{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\PostForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button, Modal } from 'antd';\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPost } from '../reducers/post';\n\nconst PostForm = () => {\n  // const [isModalOpen, setIsModalOpen] = useState(false);\n  // const [text, onChangeText, setText] = useInput('');\n  // const showModal = () => {\n  //     setIsModalOpen(true);\n  // };\n  // const handleOk = () => {\n  //     setIsModalOpen(false);\n  // }\n  // const handleCancle = () => {\n  //     setIsModalOpen(false);\n  // };\n  // const onSubmit = useCallback(() => {\n  //     // 모달 불러오기\n  // });\n  // return(\n  //     <>\n  //         <Button block onClick={showModal}>+ 내 여행 게시글 작성하기</Button>\n  //         <Modal title=\"게시글 작성하기\" open={isModalOpen} onOk={handleOk} onCancel={handleCancle}>\n  //             <Input style={{margin: '5px 0px'}} placeholder=\"게시글 제목을 입력하세요\" />\n  //             <Input.TextArea style={{margin: '5px 0px'}} value={text} onChange={onChangeText} maxLength={140} placeholder=\"게시글 본문을 작성하세요.\" />\n  //         </Modal>\n  //     </>\n  // )\n  const {\n    imagePaths,\n    addPostDone\n  } = useSelector(state => state.post);\n  const dispatch = useDispatch();\n  const imageInput = useRef();\n  const [text, onChangeText, setText] = useInput('');\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n  const onSubmit = useCallback(() => {\n    dispatch(addPost(text));\n  }, [text]);\n  const onClickImageUpload = useCallback(() => {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(Form, {\n    style: {\n      margin: '10px 0 20px'\n    },\n    encType: \"multipart/form-data\",\n    onFinish: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, __jsx(Input.TextArea, {\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uC5B4\\uB5A4 \\uC2E0\\uAE30\\uD55C \\uC77C\\uC774 \\uC788\\uC5C8\\uB098\\uC694?\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), __jsx(Button, {\n    type: \"primary\",\n    style: {\n      float: 'right'\n    },\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, \"\\uC9F9\\uC9F9\")), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  }, imagePaths.map(v => __jsx(\"div\", {\n    key: v,\n    style: {\n      display: 'inline-block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, __jsx(\"img\", {\n    src: v,\n    style: {\n      width: '200px'\n    },\n    alt: v,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 25\n    }\n  }, __jsx(Button, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, \"\\uC81C\\uAC70\"))))));\n};\n\nexport default PostForm;","map":{"version":3,"names":["Form","Input","Button","Modal","React","useCallback","useState","useRef","useEffect","useDispatch","useSelector","useInput","addPost","PostForm","imagePaths","addPostDone","state","post","dispatch","imageInput","text","onChangeText","setText","onSubmit","onClickImageUpload","current","click","margin","float","map","v","display","width"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button, Modal } from 'antd';\r\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    // const [isModalOpen, setIsModalOpen] = useState(false);\r\n    // const [text, onChangeText, setText] = useInput('');\r\n\r\n\r\n    // const showModal = () => {\r\n    //     setIsModalOpen(true);\r\n    // };\r\n\r\n    // const handleOk = () => {\r\n    //     setIsModalOpen(false);\r\n    // }\r\n\r\n    // const handleCancle = () => {\r\n    //     setIsModalOpen(false);\r\n    // };\r\n\r\n    // const onSubmit = useCallback(() => {\r\n    //     // 모달 불러오기\r\n    // });\r\n\r\n    // return(\r\n    //     <>\r\n    //         <Button block onClick={showModal}>+ 내 여행 게시글 작성하기</Button>\r\n    //         <Modal title=\"게시글 작성하기\" open={isModalOpen} onOk={handleOk} onCancel={handleCancle}>\r\n    //             <Input style={{margin: '5px 0px'}} placeholder=\"게시글 제목을 입력하세요\" />\r\n    //             <Input.TextArea style={{margin: '5px 0px'}} value={text} onChange={onChangeText} maxLength={140} placeholder=\"게시글 본문을 작성하세요.\" />\r\n\r\n    //         </Modal>\r\n        \r\n    //     </>\r\n\r\n    // )\r\n\r\n\r\n\r\n\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const dispatch = useDispatch();\r\n    const imageInput = useRef();\r\n    const [text, onChangeText, setText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if (addPostDone) {\r\n            setText('');\r\n        }\r\n    }, [addPostDone]);\r\n\r\n\r\n    const onSubmit = useCallback(() => {\r\n        dispatch(addPost(text));\r\n\r\n    }, [text]);\r\n\r\n    const onClickImageUpload = useCallback(()=> {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n    return (\r\n        <Form style={{margin: '10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit}>\r\n            <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\r\n            <div>\r\n                <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n                <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">짹짹</Button>\r\n            </div>\r\n            <div>\r\n                {imagePaths.map((v) => (\r\n                    <div key={v} style={{display:'inline-block'}}>\r\n                        <img src={v} style={{width:'200px'}} alt={v} />\r\n                        <div>\r\n                            <Button>제거</Button>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </Form>\r\n    )\r\n};\r\n\r\nexport default PostForm;"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,EAA8BC,KAA9B,QAA2C,MAA3C;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,MAAvC,EAA+CC,SAA/C,QAAgE,OAAhE;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,OAAT,QAAwB,kBAAxB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;EACnB;EACA;EAGA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EAEA;EAEA;EAKA,MAAM;IAAEC,UAAF;IAAcC;EAAd,IAA8BL,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA/C;EACA,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;EACA,MAAMU,UAAU,GAAGZ,MAAM,EAAzB;EACA,MAAM,CAACa,IAAD,EAAOC,YAAP,EAAqBC,OAArB,IAAgCX,QAAQ,CAAC,EAAD,CAA9C;EAEAH,SAAS,CAAC,MAAM;IACZ,IAAIO,WAAJ,EAAiB;MACbO,OAAO,CAAC,EAAD,CAAP;IACH;EACJ,CAJQ,EAIN,CAACP,WAAD,CAJM,CAAT;EAOA,MAAMQ,QAAQ,GAAGlB,WAAW,CAAC,MAAM;IAC/Ba,QAAQ,CAACN,OAAO,CAACQ,IAAD,CAAR,CAAR;EAEH,CAH2B,EAGzB,CAACA,IAAD,CAHyB,CAA5B;EAKA,MAAMI,kBAAkB,GAAGnB,WAAW,CAAC,MAAK;IACxCc,UAAU,CAACM,OAAX,CAAmBC,KAAnB;EACH,CAFqC,EAEnC,CAACP,UAAU,CAACM,OAAZ,CAFmC,CAAtC;EAGA,OACI,MAAC,IAAD;IAAM,KAAK,EAAE;MAACE,MAAM,EAAE;IAAT,CAAb;IAAsC,OAAO,EAAC,qBAA9C;IAAoE,QAAQ,EAAEJ,QAA9E;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,KAAD,CAAO,QAAP;IAAgB,KAAK,EAAEH,IAAvB;IAA6B,QAAQ,EAAEC,YAAvC;IAAqD,SAAS,EAAE,GAAhE;IAAqE,WAAW,EAAC,wEAAjF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,EAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI;IAAO,IAAI,EAAC,MAAZ;IAAmB,QAAQ,MAA3B;IAA4B,MAAM,MAAlC;IAAmC,GAAG,EAAEF,UAAxC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,EAEI,MAAC,MAAD;IAAQ,OAAO,EAAEK,kBAAjB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,2CAFJ,EAGI,MAAC,MAAD;IAAQ,IAAI,EAAC,SAAb;IAAuB,KAAK,EAAE;MAACI,KAAK,EAAE;IAAR,CAA9B;IAAgD,QAAQ,EAAC,QAAzD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAHJ,CAFJ,EAOI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKd,UAAU,CAACe,GAAX,CAAgBC,CAAD,IACZ;IAAK,GAAG,EAAEA,CAAV;IAAa,KAAK,EAAE;MAACC,OAAO,EAAC;IAAT,CAApB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI;IAAK,GAAG,EAAED,CAAV;IAAa,KAAK,EAAE;MAACE,KAAK,EAAC;IAAP,CAApB;IAAqC,GAAG,EAAEF,CAA1C;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,EAEI;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBADJ,CAFJ,CADH,CADL,CAPJ,CADJ;AAoBH,CA7ED;;AA+EA,eAAejB,QAAf"},"metadata":{},"sourceType":"module"}