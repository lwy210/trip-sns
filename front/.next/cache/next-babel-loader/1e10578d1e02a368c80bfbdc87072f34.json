{"ast":null,"code":"// configureStore.js\nimport { createWrapper } from 'next-redux-wrapper';\nimport { applyMiddleware, compose, createStore } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport createSagaMiddleware from '@redux-saga/core';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\n\nvar loggerMiddleware = function loggerMiddleware(_ref) {\n  var dispatch = _ref.dispatch,\n      getState = _ref.getState;\n  return function (next) {\n    return function (action) {\n      console.log(action);\n      return next(action);\n    };\n  };\n};\n\nvar configureStore = function configureStore() {\n  var sagaMiddleware = createSagaMiddleware();\n  var middlewares = [sagaMiddleware, loggerMiddleware()];\n  var enhancer = false ? compose(applyMiddleware.apply(void 0, middlewares)) : composeWithDevTools(applyMiddleware.apply(void 0, middlewares));\n  var store = createStore(reducer, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga);\n  store.dispatch({\n    type: 'CHANGE_NICKNAME',\n    data: 'boogicho'\n  });\n  return store;\n};\n\nvar wrapper = createWrapper(configureStore, {\n  debug: true\n});\nexport default wrapper;","map":{"version":3,"names":["createWrapper","applyMiddleware","compose","createStore","composeWithDevTools","createSagaMiddleware","reducer","rootSaga","loggerMiddleware","dispatch","getState","next","action","console","log","configureStore","sagaMiddleware","middlewares","enhancer","store","sagaTask","run","type","data","wrapper","debug"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/store/configureStore.js"],"sourcesContent":["// configureStore.js\r\n\r\nimport { createWrapper } from 'next-redux-wrapper';\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport createSagaMiddleware from '@redux-saga/core';\r\n\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\n\r\nconst loggerMiddleware = ({ dispatch, getState }) => (next) => (action) => {\r\n    console.log(action);\r\n    return next(action);\r\n };\r\nconst configureStore = () => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    const middlewares = [sagaMiddleware, loggerMiddleware()];\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n        ? compose(applyMiddleware(...middlewares))\r\n        : composeWithDevTools(applyMiddleware(...middlewares))\r\n\r\n    const store = createStore(reducer, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    store.dispatch({\r\n        type: 'CHANGE_NICKNAME',\r\n        data: 'boogicho',\r\n    })\r\n    return store;\r\n};\r\n\r\nconst wrapper = createWrapper(configureStore, {\r\n    debug: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nexport default wrapper;"],"mappings":"AAAA;AAEA,SAASA,aAAT,QAA8B,oBAA9B;AACA,SAASC,eAAT,EAA0BC,OAA1B,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAOC,oBAAP,MAAiC,kBAAjC;AAEA,OAAOC,OAAP,MAAoB,aAApB;AACA,OAAOC,QAAP,MAAqB,UAArB;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;EAAA,IAAGC,QAAH,QAAGA,QAAH;EAAA,IAAaC,QAAb,QAAaA,QAAb;EAAA,OAA4B,UAACC,IAAD;IAAA,OAAU,UAACC,MAAD,EAAY;MACvEC,OAAO,CAACC,GAAR,CAAYF,MAAZ;MACA,OAAOD,IAAI,CAACC,MAAD,CAAX;IACF,CAHmD;EAAA,CAA5B;AAAA,CAAzB;;AAIA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,GAAM;EACzB,IAAMC,cAAc,GAAGX,oBAAoB,EAA3C;EACA,IAAMY,WAAW,GAAG,CAACD,cAAD,EAAiBR,gBAAgB,EAAjC,CAApB;EACA,IAAMU,QAAQ,GAAG,QACXhB,OAAO,CAACD,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CADI,GAEXb,mBAAmB,CAACH,eAAe,MAAf,SAAmBgB,WAAnB,CAAD,CAFzB;EAIA,IAAME,KAAK,GAAGhB,WAAW,CAACG,OAAD,EAAUY,QAAV,CAAzB;EACAC,KAAK,CAACC,QAAN,GAAiBJ,cAAc,CAACK,GAAf,CAAmBd,QAAnB,CAAjB;EACAY,KAAK,CAACV,QAAN,CAAe;IACXa,IAAI,EAAE,iBADK;IAEXC,IAAI,EAAE;EAFK,CAAf;EAIA,OAAOJ,KAAP;AACH,CAdD;;AAgBA,IAAMK,OAAO,GAAGxB,aAAa,CAACe,cAAD,EAAiB;EAC1CU,KAAK;AADqC,CAAjB,CAA7B;AAIA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}