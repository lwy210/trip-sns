{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\PostForm.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport { Form, Input, Button, Modal } from 'antd';\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from '../hooks/useInput';\nimport { addPost } from '../reducers/post';\n\nvar PostForm = function PostForm() {\n  _s();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      addPostDone = _useSelector.addPostDone;\n\n  var _useState = useState(false),\n      isModalOpen = _useState[0],\n      setIsModalOpen = _useState[1];\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 3),\n      text = _useInput2[0],\n      onChangeText = _useInput2[1],\n      setText = _useInput2[2];\n\n  var imageInput = useRef();\n\n  var showModal = function showModal() {\n    setIsModalOpen(true);\n  };\n\n  var handleOk = function handleOk() {\n    setIsModalOpen(false);\n  };\n\n  var handleCancle = function handleCancle() {\n    setIsModalOpen(false);\n  };\n\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  return __jsx(React.Fragment, null, __jsx(Button, {\n    block: true,\n    onClick: showModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"+ \\uB0B4 \\uC5EC\\uD589 \\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"), __jsx(Modal, {\n    title: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\\uD558\\uAE30\",\n    open: isModalOpen,\n    onOk: handleOk,\n    onCancel: handleCancle,\n    footer: [__jsx(Button, {\n      key: \"add trip route\",\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, \"\\uC5EC\\uD589 \\uACBD\\uB85C \\uCD94\\uAC00\"), __jsx(Button, {\n      key: \"post\",\n      type: \"primary\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"\\uAC8C\\uC2DC\")],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, __jsx(Input, {\n    style: {\n      margin: '5px 0px'\n    },\n    placeholder: \"\\uAC8C\\uC2DC\\uAE00 \\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 17\n    }\n  }), __jsx(Input.TextArea, {\n    style: {\n      margin: '5px 0px'\n    },\n    value: text,\n    onChange: onChangeText,\n    maxLength: 140,\n    placeholder: \"\\uAC8C\\uC2DC\\uAE00 \\uBCF8\\uBB38\\uC744 \\uC791\\uC131\\uD558\\uC138\\uC694.\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 17\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, __jsx(\"input\", {\n    type: \"file\",\n    multiple: true,\n    hidden: true,\n    ref: imageInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }), __jsx(Button, {\n    onClick: onClickImageUpload,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 21\n    }\n  }, \"+ \\uC0AC\\uC9C4 \\uC5C5\\uB85C\\uB4DC\")))); // const { imagePaths, addPostDone } = useSelector((state) => state.post);\n  // const dispatch = useDispatch();\n  // const imageInput = useRef();\n  // const [text, onChangeText, setText] = useInput('');\n  // useEffect(() => {\n  //     if (addPostDone) {\n  //         setText('');\n  //     }\n  // }, [addPostDone]);\n  // const onSubmit = useCallback(() => {\n  //     dispatch(addPost(text));\n  // }, [text]);\n  // const onClickImageUpload = useCallback(()=> {\n  //     imageInput.current.click();\n  // }, [imageInput.current]);\n  // return (\n  //     <Form style={{margin: '10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit}>\n  //         <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\n  //         <div>\n  //             <input type=\"file\" multiple hidden ref={imageInput}/>\n  //             <Button onClick={onClickImageUpload}>이미지 업로드</Button>\n  //             <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">짹짹</Button>\n  //         </div>\n  //         <div>\n  //             {imagePaths.map((v) => (\n  //                 <div key={v} style={{display:'inline-block'}}>\n  //                     <img src={v} style={{width:'200px'}} alt={v} />\n  //                     <div>\n  //                         <Button>제거</Button>\n  //                     </div>\n  //                 </div>\n  //             ))}\n  //         </div>\n  //     </Form>\n  // )\n};\n\n_s(PostForm, \"b1W9v+N6yEKvWuZ1LdbPXzrbWeY=\", false, function () {\n  return [useSelector, useInput];\n});\n\n_c = PostForm;\nexport default PostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostForm\");","map":{"version":3,"names":["Form","Input","Button","Modal","React","useCallback","useState","useRef","useEffect","useDispatch","useSelector","useInput","addPost","PostForm","state","post","imagePaths","addPostDone","isModalOpen","setIsModalOpen","text","onChangeText","setText","imageInput","showModal","handleOk","handleCancle","onClickImageUpload","current","click","margin"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/PostForm.js"],"sourcesContent":["import { Form, Input, Button, Modal } from 'antd';\r\nimport React, { useCallback, useState, useRef, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport useInput from '../hooks/useInput';\r\nimport { addPost } from '../reducers/post';\r\n\r\nconst PostForm = () => {\r\n    const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    const [isModalOpen, setIsModalOpen] = useState(false);\r\n    const [text, onChangeText, setText] = useInput('');\r\n    const imageInput = useRef();\r\n\r\n\r\n    const showModal = () => {\r\n        setIsModalOpen(true);\r\n    };\r\n\r\n    const handleOk = () => {\r\n        setIsModalOpen(false);\r\n    }\r\n\r\n    const handleCancle = () => {\r\n        setIsModalOpen(false);\r\n    };\r\n\r\n    const onClickImageUpload = useCallback(()=> {\r\n        imageInput.current.click();\r\n    }, [imageInput.current]);\r\n\r\n    return(\r\n        <>\r\n            <Button block onClick={showModal}>+ 내 여행 게시글 작성하기</Button>\r\n            <Modal \r\n                title=\"게시글 작성하기\" \r\n                open={isModalOpen} \r\n                onOk={handleOk} \r\n                onCancel={handleCancle}\r\n                footer={[\r\n                    <Button key=\"add trip route\" type=\"primary\">여행 경로 추가</Button>,\r\n                    <Button key=\"post\" type=\"primary\">게시</Button>\r\n                ]}>\r\n                <Input style={{margin: '5px 0px'}} placeholder=\"게시글 제목을 입력하세요\" />\r\n                <Input.TextArea style={{margin: '5px 0px'}} value={text} onChange={onChangeText} maxLength={140} placeholder=\"게시글 본문을 작성하세요.\" />\r\n                <div>\r\n                    <input type=\"file\" multiple hidden ref={imageInput}/>\r\n                    <Button onClick={onClickImageUpload}>+ 사진 업로드</Button> \r\n                </div>\r\n            </Modal>\r\n        \r\n        </>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n    // const { imagePaths, addPostDone } = useSelector((state) => state.post);\r\n    // const dispatch = useDispatch();\r\n    // const imageInput = useRef();\r\n    // const [text, onChangeText, setText] = useInput('');\r\n\r\n    // useEffect(() => {\r\n    //     if (addPostDone) {\r\n    //         setText('');\r\n    //     }\r\n    // }, [addPostDone]);\r\n\r\n\r\n    // const onSubmit = useCallback(() => {\r\n    //     dispatch(addPost(text));\r\n\r\n    // }, [text]);\r\n\r\n    // const onClickImageUpload = useCallback(()=> {\r\n    //     imageInput.current.click();\r\n    // }, [imageInput.current]);\r\n    // return (\r\n    //     <Form style={{margin: '10px 0 20px'}} encType='multipart/form-data' onFinish={onSubmit}>\r\n    //         <Input.TextArea value={text} onChange={onChangeText} maxLength={140} placeholder=\"어떤 신기한 일이 있었나요?\" />\r\n    //         <div>\r\n    //             <input type=\"file\" multiple hidden ref={imageInput}/>\r\n    //             <Button onClick={onClickImageUpload}>이미지 업로드</Button>\r\n    //             <Button type=\"primary\" style={{float: 'right'}} htmlType=\"submit\">짹짹</Button>\r\n    //         </div>\r\n    //         <div>\r\n    //             {imagePaths.map((v) => (\r\n    //                 <div key={v} style={{display:'inline-block'}}>\r\n    //                     <img src={v} style={{width:'200px'}} alt={v} />\r\n    //                     <div>\r\n    //                         <Button>제거</Button>\r\n    //                     </div>\r\n    //                 </div>\r\n    //             ))}\r\n    //         </div>\r\n    //     </Form>\r\n    // )\r\n};\r\n\r\nexport default PostForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}