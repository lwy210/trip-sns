{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\PostCard.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar } from 'antd';\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport PostImages from './PostImages';\n\nconst PostCard = ({\n  post\n}) => {\n  const {\n    me\n  } = useSelector(state => state.user);\n  const id = me === null || me === void 0 ? void 0 : me.id;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Card, {\n    cover: post.Images[0] && __jsx(PostImages, {\n      Image: post.Images,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 42\n      }\n    }),\n    actions: [__jsx(RetweetOutlined, {\n      key: \"retweet\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }\n    }), __jsx(HeartOutlined, {\n      key: \"heart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 21\n      }\n    }), __jsx(MessageOutlined, {\n      key: \"comment\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }), __jsx(Popover, {\n      key: \"more\",\n      content: __jsx(Button.Group, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 25\n        }\n      }, id && post.User.id === id ? __jsx(React.Fragment, null, __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 33\n        }\n      }, \"\\uC218\\uC815\"), __jsx(Button, {\n        type: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 33\n        }\n      }, \"\\uC0AD\\uC81C\")) : __jsx(Button, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }\n      }, \"\\uC2E0\\uACE0\")),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 21\n      }\n    }, __jsx(EllipsisOutlined, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }))],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, __jsx(Card.Meta, {\n    avatar: __jsx(Avatar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 29\n      }\n    }, post.User.nickname[0]),\n    title: post.User.nickname,\n    description: post.content,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }\n  })));\n};\n\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;","map":{"version":3,"names":["React","PropTypes","Card","Popover","Button","Avatar","RetweetOutlined","HeartOutlined","MessageOutlined","EllipsisOutlined","useSelector","PostImages","PostCard","post","me","state","user","id","Images","User","nickname","content","propTypes","shape","number","object","string","createdAt","Comments","arrayOf","isRequired"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/PostCard.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Popover, Button, Avatar } from 'antd';\r\nimport { RetweetOutlined, HeartOutlined, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport PostImages from './PostImages';\r\n\r\nconst PostCard = ({ post }) => {\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me?.id;\r\n    return (\r\n        <div>\r\n            <Card \r\n                cover={post.Images[0] && <PostImages Image={post.Images} />}\r\n                actions={[\r\n                    <RetweetOutlined key=\"retweet\" />,\r\n                    <HeartOutlined key=\"heart\"/>,\r\n                    <MessageOutlined key=\"comment\"/>,\r\n                    <Popover key=\"more\" content={(\r\n                        <Button.Group>\r\n                            { id && post.User.id === id ? (\r\n                            <>\r\n                                <Button>수정</Button>\r\n                                <Button type=\"danger\">삭제</Button>\r\n                            </>\r\n                            ) : <Button>신고</Button>}\r\n                        </Button.Group>\r\n                    )}>\r\n                        <EllipsisOutlined />\r\n                    </Popover>\r\n                ]}\r\n            >\r\n                <Card.Meta \r\n                    avatar={<Avatar>{post.User.nickname[0]}</Avatar>}\r\n                    title={post.User.nickname}\r\n                    description={post.content}\r\n                />\r\n            </Card>\r\n            {/* <CommentForm />\r\n            <Commnets /> */}\r\n        </div>\r\n    )\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}