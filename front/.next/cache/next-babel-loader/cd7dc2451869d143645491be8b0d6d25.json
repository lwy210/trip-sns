{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\CommentForm.js\";\nvar __jsx = React.createElement;\nimport { Form, Input, Button } from \"antd\";\nimport PropTypes from 'prop-types';\nimport React, { useCallback } from 'react';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport useInput from \"../hooks/useInput\";\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\n\nconst CommentForm = ({\n  post\n}) => {\n  const dispatch = useDispatch();\n  const id = useSelector(state => {\n    var _state$user$me;\n\n    return (_state$user$me = state.user.me) === null || _state$user$me === void 0 ? void 0 : _state$user$me.id;\n  });\n  const {\n    addCommentDone\n  } = useSelector(state => state.post);\n  const [commentText, onChangeCommentText, setCommentText] = useInput('');\n  useEffect(() => {\n    if (addCommentDone) {\n      setCommentText('');\n    }\n  }, [addCommentDone]);\n  const onSubmitComment = useCallback(() => {\n    dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        content: commentText,\n        postId: post.id,\n        userId: id\n      }\n    });\n  }, [commentText, id]);\n  return __jsx(Form, {\n    onFinish: onSubmitComment,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, __jsx(Form.Item, {\n    style: {\n      position: 'relative',\n      margin: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, __jsx(Input.TextArea, {\n    value: commentText,\n    onChange: onChangeCommentText,\n    rows: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  }), __jsx(Button, {\n    style: {\n      position: 'absolute',\n      right: 0,\n      bottom: -40\n    },\n    type: \"primary\",\n    htmlType: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, \"\\uC090\\uC57D\")));\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":{"version":3,"names":["Form","Input","Button","PropTypes","React","useCallback","useDispatch","useSelector","useInput","ADD_COMMENT_REQUEST","CommentForm","post","dispatch","id","state","user","me","addCommentDone","commentText","onChangeCommentText","setCommentText","useEffect","onSubmitComment","type","data","content","postId","userId","position","margin","right","bottom","propTypes","object","isRequired"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/CommentForm.js"],"sourcesContent":["import { Form, Input, Button } from \"antd\";\r\nimport PropTypes from 'prop-types';\r\nimport React, { useCallback } from 'react';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport useInput from \"../hooks/useInput\";\r\nimport { ADD_COMMENT_REQUEST } from \"../reducers/post\";\r\n\r\nconst CommentForm = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const id = useSelector((state) => state.user.me?.id);\r\n    const { addCommentDone } = useSelector((state) => state.post);\r\n    const [commentText, onChangeCommentText, setCommentText] = useInput('');\r\n\r\n    useEffect(() => {\r\n        if (addCommentDone) {\r\n            setCommentText('');\r\n        }\r\n    }, [addCommentDone]);\r\n\r\n    const onSubmitComment = useCallback(() => {\r\n        dispatch({\r\n            type: ADD_COMMENT_REQUEST,\r\n            data: { content: commentText, postId: post.id, userId: id},\r\n        });\r\n    }, [commentText, id]);\r\n    return (\r\n        <Form onFinish={onSubmitComment}>\r\n            <Form.Item style={{position: 'relative', margin: 0}}>\r\n                <Input.TextArea value={commentText} onChange={onChangeCommentText} rows={4}/>\r\n                <Button style={{position: 'absolute', right: 0, bottom: -40 }} type=\"primary\" htmlType=\"submit\">삐약</Button>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n};\r\n\r\nCommentForm.propTypes = {\r\n    post: PropTypes.object.isRequired,\r\n}\r\n\r\nexport default CommentForm;"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,SAASC,mBAAT,QAAoC,kBAApC;;AAEA,MAAMC,WAAW,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAC9B,MAAMC,QAAQ,GAAGN,WAAW,EAA5B;EACA,MAAMO,EAAE,GAAGN,WAAW,CAAEO,KAAD;IAAA;;IAAA,yBAAWA,KAAK,CAACC,IAAN,CAAWC,EAAtB,mDAAW,eAAeH,EAA1B;EAAA,CAAD,CAAtB;EACA,MAAM;IAAEI;EAAF,IAAqBV,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACH,IAAlB,CAAtC;EACA,MAAM,CAACO,WAAD,EAAcC,mBAAd,EAAmCC,cAAnC,IAAqDZ,QAAQ,CAAC,EAAD,CAAnE;EAEAa,SAAS,CAAC,MAAM;IACZ,IAAIJ,cAAJ,EAAoB;MAChBG,cAAc,CAAC,EAAD,CAAd;IACH;EACJ,CAJQ,EAIN,CAACH,cAAD,CAJM,CAAT;EAMA,MAAMK,eAAe,GAAGjB,WAAW,CAAC,MAAM;IACtCO,QAAQ,CAAC;MACLW,IAAI,EAAEd,mBADD;MAELe,IAAI,EAAE;QAAEC,OAAO,EAAEP,WAAX;QAAwBQ,MAAM,EAAEf,IAAI,CAACE,EAArC;QAAyCc,MAAM,EAAEd;MAAjD;IAFD,CAAD,CAAR;EAIH,CALkC,EAKhC,CAACK,WAAD,EAAcL,EAAd,CALgC,CAAnC;EAMA,OACI,MAAC,IAAD;IAAM,QAAQ,EAAES,eAAhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,IAAD,CAAM,IAAN;IAAW,KAAK,EAAE;MAACM,QAAQ,EAAE,UAAX;MAAuBC,MAAM,EAAE;IAA/B,CAAlB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,KAAD,CAAO,QAAP;IAAgB,KAAK,EAAEX,WAAvB;IAAoC,QAAQ,EAAEC,mBAA9C;IAAmE,IAAI,EAAE,CAAzE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,EAEI,MAAC,MAAD;IAAQ,KAAK,EAAE;MAACS,QAAQ,EAAE,UAAX;MAAuBE,KAAK,EAAE,CAA9B;MAAiCC,MAAM,EAAE,CAAC;IAA1C,CAAf;IAA+D,IAAI,EAAC,SAApE;IAA8E,QAAQ,EAAC,QAAvF;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,kBAFJ,CADJ,CADJ;AAQH,CA1BD;;AA4BArB,WAAW,CAACsB,SAAZ,GAAwB;EACpBrB,IAAI,EAAER,SAAS,CAAC8B,MAAV,CAAiBC;AADH,CAAxB;AAIA,eAAexB,WAAf"},"metadata":{},"sourceType":"module"}