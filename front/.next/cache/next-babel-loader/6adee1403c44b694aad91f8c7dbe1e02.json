{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport shortId from 'shortid';\nexport const initialState = {\n  mainPosts: [{\n    id: 1,\n    User: {\n      id: 1,\n      nickname: '제로초'\n    },\n    content: '첫 번째 게시글 #해시태그 #익스프레스',\n    Images: [{\n      src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg'\n    }, {\n      src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\n    }],\n    Comments: [{\n      User: {\n        nickname: 'nero'\n      },\n      content: '우와 개정판이 나왔군요~'\n    }, {\n      User: {\n        nickname: 'hero'\n      },\n      content: '얼른 사고싶어요~'\n    }]\n  }],\n  imagePaths: [],\n  addPostLoading: false,\n  addPostDone: false,\n  addPostError: null,\n  addCommentLoading: false,\n  addCommentDone: false,\n  addCommentError: null\n};\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport const addPost = data => ({\n  type: ADD_POST_REQUEST,\n  data\n});\nexport const addComment = data => ({\n  type: ADD_COMMENT_REQUEST,\n  data\n});\n\nconst dummyPost = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  },\n  Images: [],\n  Comments: []\n});\n\nconst dummyComment = data => ({\n  id: shortId.generate(),\n  content: data,\n  User: {\n    id: 1,\n    nickname: '제로초'\n  }\n});\n\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: true,\n        addPostDone: false,\n        addPostError: null\n      });\n\n    case ADD_POST_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        mainPosts: [dummyPost(action.data), ...state.mainPosts],\n        addPostLoading: false,\n        addPostDone: true\n      });\n\n    case ADD_POST_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addPostLoading: false,\n        addPostError: action.error\n      });\n\n    case ADD_COMMENT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: true,\n        addCommentDone: false,\n        addCommentError: null\n      });\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n\n        const post = _objectSpread({}, state.mainPosts[postIndex]);\n\n        post.Comments = [dummyComment(action.data.content), ...post.Comments];\n        const mainPosts = [...state.mainPosts];\n        mainPosts[postIndex] = post;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          addCommentLoading: false,\n          addCommentDone: true\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addCommentLoading: false,\n        addCommentError: action.error\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"names":["shortId","initialState","mainPosts","id","User","nickname","content","Images","src","Comments","imagePaths","addPostLoading","addPostDone","addPostError","addCommentLoading","addCommentDone","addCommentError","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","addPost","data","type","addComment","dummyPost","generate","dummyComment","reducer","state","action","error","postIndex","findIndex","v","postId","post"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/reducers/post.js"],"sourcesContent":["import shortId from 'shortid';\r\n\r\nexport const initialState = {\r\n    mainPosts: [{\r\n        id: 1,\r\n        User: {\r\n            id: 1,\r\n            nickname: '제로초',\r\n        },\r\n        content: '첫 번째 게시글 #해시태그 #익스프레스',\r\n        Images: [{\r\n            src: 'https://bookthumb-phinf.pstatic.net/cover/137/995/13799585.jpg?udate=20180726',\r\n        }, {\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001958/rn_view_BN001958.jpg',\r\n        }, {\r\n            src: 'https://gimg.gilbut.co.kr/book/BN001998/rn_view_BN001998.jpg'\r\n        }],\r\n        Comments: [{\r\n            User: {\r\n                nickname: 'nero',\r\n            },\r\n            content: '우와 개정판이 나왔군요~'\r\n        }, {\r\n            User: {\r\n                nickname: 'hero',\r\n            },\r\n            content: '얼른 사고싶어요~'\r\n        }]\r\n    }],\r\n    imagePaths: [],\r\n    addPostLoading: false,\r\n    addPostDone: false,\r\n    addPostError: null,\r\n    addCommentLoading: false,\r\n    addCommentDone: false,\r\n    addCommentError: null,\r\n};\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\n\r\nexport const addPost = (data) => ({\r\n    type: ADD_POST_REQUEST,\r\n    data,\r\n});\r\n\r\nexport const addComment = (data) => ({\r\n    type: ADD_COMMENT_REQUEST,\r\n    data,\r\n});\r\n\r\nconst dummyPost = (data) => ({\r\n    id: shortId.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n    Images: [],\r\n    Comments: [],\r\n});\r\n\r\nconst dummyComment = (data) => ({\r\n    id: shortId.generate(),\r\n    content: data,\r\n    User: {\r\n        id: 1,\r\n        nickname: '제로초',\r\n    },\r\n});\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST_REQUEST:\r\n            return {\r\n                ...state,\r\n                addPostLoading: true,\r\n                addPostDone: false,\r\n                addPostError: null,\r\n            };\r\n\r\n        case ADD_POST_SUCCESS:\r\n            return {\r\n                ...state,\r\n                mainPosts: [dummyPost(action.data), ...state.mainPosts],\r\n                addPostLoading: false,\r\n                addPostDone: true,\r\n            };\r\n        case ADD_POST_FAILURE:\r\n            return {\r\n                ...state,\r\n                addPostLoading: false,\r\n                addPostError: action.error,\r\n            };\r\n\r\n        case ADD_COMMENT_REQUEST:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: true,\r\n                addCommentDone: false,\r\n                addCommentError: null,\r\n            };\r\n\r\n        case ADD_COMMENT_SUCCESS: {\r\n            const postIndex = state.mainPosts.findIndex((v) => v.id === action.data.postId);\r\n            const post = { ...state.mainPosts[postIndex] };\r\n            post.Comments = [dummyComment(action.data.content), ...post.Comments];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = post;\r\n\r\n            return {\r\n                ...state,\r\n                addCommentLoading: false,\r\n                addCommentDone: true,\r\n            };\r\n        }\r\n        case ADD_COMMENT_FAILURE:\r\n            return {\r\n                ...state,\r\n                addCommentLoading: false,\r\n                addCommentError: action.error,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;"],"mappings":";;;;;;AAAA,OAAOA,OAAP,MAAoB,SAApB;AAEA,OAAO,MAAMC,YAAY,GAAG;EACxBC,SAAS,EAAE,CAAC;IACRC,EAAE,EAAE,CADI;IAERC,IAAI,EAAE;MACFD,EAAE,EAAE,CADF;MAEFE,QAAQ,EAAE;IAFR,CAFE;IAMRC,OAAO,EAAE,uBAND;IAORC,MAAM,EAAE,CAAC;MACLC,GAAG,EAAE;IADA,CAAD,EAEL;MACCA,GAAG,EAAE;IADN,CAFK,EAIL;MACCA,GAAG,EAAE;IADN,CAJK,CAPA;IAcRC,QAAQ,EAAE,CAAC;MACPL,IAAI,EAAE;QACFC,QAAQ,EAAE;MADR,CADC;MAIPC,OAAO,EAAE;IAJF,CAAD,EAKP;MACCF,IAAI,EAAE;QACFC,QAAQ,EAAE;MADR,CADP;MAICC,OAAO,EAAE;IAJV,CALO;EAdF,CAAD,CADa;EA2BxBI,UAAU,EAAE,EA3BY;EA4BxBC,cAAc,EAAE,KA5BQ;EA6BxBC,WAAW,EAAE,KA7BW;EA8BxBC,YAAY,EAAE,IA9BU;EA+BxBC,iBAAiB,EAAE,KA/BK;EAgCxBC,cAAc,EAAE,KAhCQ;EAiCxBC,eAAe,EAAE;AAjCO,CAArB;AAoCP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AACP,OAAO,MAAMC,gBAAgB,GAAG,kBAAzB;AAEP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AACP,OAAO,MAAMC,mBAAmB,GAAG,qBAA5B;AAGP,OAAO,MAAMC,OAAO,GAAIC,IAAD,KAAW;EAC9BC,IAAI,EAAER,gBADwB;EAE9BO;AAF8B,CAAX,CAAhB;AAKP,OAAO,MAAME,UAAU,GAAIF,IAAD,KAAW;EACjCC,IAAI,EAAEL,mBAD2B;EAEjCI;AAFiC,CAAX,CAAnB;;AAKP,MAAMG,SAAS,GAAIH,IAAD,KAAW;EACzBrB,EAAE,EAAEH,OAAO,CAAC4B,QAAR,EADqB;EAEzBtB,OAAO,EAAEkB,IAFgB;EAGzBpB,IAAI,EAAE;IACFD,EAAE,EAAE,CADF;IAEFE,QAAQ,EAAE;EAFR,CAHmB;EAOzBE,MAAM,EAAE,EAPiB;EAQzBE,QAAQ,EAAE;AARe,CAAX,CAAlB;;AAWA,MAAMoB,YAAY,GAAIL,IAAD,KAAW;EAC5BrB,EAAE,EAAEH,OAAO,CAAC4B,QAAR,EADwB;EAE5BtB,OAAO,EAAEkB,IAFmB;EAG5BpB,IAAI,EAAE;IACFD,EAAE,EAAE,CADF;IAEFE,QAAQ,EAAE;EAFR;AAHsB,CAAX,CAArB;;AASA,MAAMyB,OAAO,GAAG,CAACC,KAAK,GAAG9B,YAAT,EAAuB+B,MAAvB,KAAkC;EAC9C,QAAQA,MAAM,CAACP,IAAf;IACI,KAAKR,gBAAL;MACI,uCACOc,KADP;QAEIpB,cAAc,EAAE,IAFpB;QAGIC,WAAW,EAAE,KAHjB;QAIIC,YAAY,EAAE;MAJlB;;IAOJ,KAAKK,gBAAL;MACI,uCACOa,KADP;QAEI7B,SAAS,EAAE,CAACyB,SAAS,CAACK,MAAM,CAACR,IAAR,CAAV,EAAyB,GAAGO,KAAK,CAAC7B,SAAlC,CAFf;QAGIS,cAAc,EAAE,KAHpB;QAIIC,WAAW,EAAE;MAJjB;;IAMJ,KAAKO,gBAAL;MACI,uCACOY,KADP;QAEIpB,cAAc,EAAE,KAFpB;QAGIE,YAAY,EAAEmB,MAAM,CAACC;MAHzB;;IAMJ,KAAKb,mBAAL;MACI,uCACOW,KADP;QAEIjB,iBAAiB,EAAE,IAFvB;QAGIC,cAAc,EAAE,KAHpB;QAIIC,eAAe,EAAE;MAJrB;;IAOJ,KAAKK,mBAAL;MAA0B;QACtB,MAAMa,SAAS,GAAGH,KAAK,CAAC7B,SAAN,CAAgBiC,SAAhB,CAA2BC,CAAD,IAAOA,CAAC,CAACjC,EAAF,KAAS6B,MAAM,CAACR,IAAP,CAAYa,MAAtD,CAAlB;;QACA,MAAMC,IAAI,qBAAQP,KAAK,CAAC7B,SAAN,CAAgBgC,SAAhB,CAAR,CAAV;;QACAI,IAAI,CAAC7B,QAAL,GAAgB,CAACoB,YAAY,CAACG,MAAM,CAACR,IAAP,CAAYlB,OAAb,CAAb,EAAoC,GAAGgC,IAAI,CAAC7B,QAA5C,CAAhB;QACA,MAAMP,SAAS,GAAG,CAAC,GAAG6B,KAAK,CAAC7B,SAAV,CAAlB;QACAA,SAAS,CAACgC,SAAD,CAAT,GAAuBI,IAAvB;QAEA,uCACOP,KADP;UAEIjB,iBAAiB,EAAE,KAFvB;UAGIC,cAAc,EAAE;QAHpB;MAKH;;IACD,KAAKO,mBAAL;MACI,uCACOS,KADP;QAEIjB,iBAAiB,EAAE,KAFvB;QAGIE,eAAe,EAAEgB,MAAM,CAACC;MAH5B;;IAMJ;MACI,OAAOF,KAAP;EApDR;AAsDH,CAvDD;;AAyDA,eAAeD,OAAf"},"metadata":{},"sourceType":"module"}