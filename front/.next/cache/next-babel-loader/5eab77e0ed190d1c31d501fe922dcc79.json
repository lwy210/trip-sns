{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\FollowButtonInList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nvar FollowButtonInList = function FollowButtonInList(_ref) {\n  _s();\n\n  var item = _ref.item;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading; // 리덕스에서 내 정보 받아오고\n\n\n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === item.id;\n  }); // 포스트 작성한 사람들 중에 내가 팔로윙한 사람들\n\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      // 내가 팔로잉을 하고 있는데 버튼을 눌렀다\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: item.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: item.id\n      });\n    }\n  }, [isFollowing]);\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClick: onClickButton,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, isFollowing ? '언팔로우' : '팔로우');\n};\n\n_s(FollowButtonInList, \"oQRGZ4+MgpAjZ6p1zzrPk3lOofY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FollowButtonInList;\nFollowButtonInList.propTypes = {\n  // object말고 shape가 더 좋은 코드이니 여러분은 shape로 하세요\n  post: PropTypes.object.isRequired\n};\nexport default FollowButtonInList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowButtonInList\");","map":{"version":3,"names":["React","useCallback","Button","PropTypes","useDispatch","useSelector","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowButtonInList","item","dispatch","state","user","me","followLoading","unfollowLoading","isFollowing","Followings","find","v","id","onClickButton","type","data","propTypes","post","object","isRequired"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/FollowButtonInList.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowButtonInList = ({ item }) => {\r\n    const dispatch = useDispatch();\r\n    const { me, followLoading, unfollowLoading } = useSelector((state) => state.user); // 리덕스에서 내 정보 받아오고\r\n    const isFollowing = me?.Followings.find((v) => v.id === item.id) // 포스트 작성한 사람들 중에 내가 팔로윙한 사람들\r\n    const onClickButton = useCallback(() => {\r\n        if (isFollowing) { // 내가 팔로잉을 하고 있는데 버튼을 눌렀다\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: item.id,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FOLLOW_REQUEST,\r\n                data: item.id,\r\n            });\r\n        }\r\n    }, [isFollowing]);\r\n    \r\n    return (\r\n        <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\r\n            {isFollowing ? '언팔로우' : '팔로우'}\r\n        </Button>\r\n    );\r\n};\r\n\r\nFollowButtonInList.propTypes = {\r\n    // object말고 shape가 더 좋은 코드이니 여러분은 shape로 하세요\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FollowButtonInList;"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAAc;EAAA;;EAAA,IAAXC,IAAW,QAAXA,IAAW;EACrC,IAAMC,QAAQ,GAAGN,WAAW,EAA5B;;EACA,mBAA+CC,WAAW,CAAC,UAACM,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAjB;EAAA,CAAD,CAA1D;EAAA,IAAQC,EAAR,gBAAQA,EAAR;EAAA,IAAYC,aAAZ,gBAAYA,aAAZ;EAAA,IAA2BC,eAA3B,gBAA2BA,eAA3B,CAFqC,CAE8C;;;EACnF,IAAMC,WAAW,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAoB,UAACC,CAAD;IAAA,OAAOA,CAAC,CAACC,EAAF,KAASX,IAAI,CAACW,EAArB;EAAA,CAApB,CAApB,CAHqC,CAG4B;;EACjE,IAAMC,aAAa,GAAGpB,WAAW,CAAC,YAAM;IACpC,IAAIe,WAAJ,EAAiB;MAAE;MACfN,QAAQ,CAAC;QACLY,IAAI,EAAEf,gBADD;QAELgB,IAAI,EAAEd,IAAI,CAACW;MAFN,CAAD,CAAR;IAIH,CALD,MAKO;MACHV,QAAQ,CAAC;QACLY,IAAI,EAAEhB,cADD;QAELiB,IAAI,EAAEd,IAAI,CAACW;MAFN,CAAD,CAAR;IAIH;EACJ,CAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;EAcA,OACI,MAAC,MAAD;IAAQ,OAAO,EAAEF,aAAa,IAAIC,eAAlC;IAAmD,OAAO,EAAEM,aAA5D;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKL,WAAW,GAAG,MAAH,GAAY,KAD5B,CADJ;AAKH,CAvBD;;GAAMR,kB;UACeJ,W,EAC8BC,W;;;KAF7CG,kB;AAyBNA,kBAAkB,CAACgB,SAAnB,GAA+B;EAC3B;EACAC,IAAI,EAAEtB,SAAS,CAACuB,MAAV,CAAiBC;AAFI,CAA/B;AAKA,eAAenB,kBAAf"},"metadata":{},"sourceType":"module"}