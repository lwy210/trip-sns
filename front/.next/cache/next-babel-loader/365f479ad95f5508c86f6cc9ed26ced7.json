{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\imagesZoom\\\\index.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport PropTypes from 'prop-types';\nimport React, { useState } from 'react';\nimport Slick from 'react-slick'; //import { Overlay, Global, Header, CloseBtn, ImgWrapper, Indicator, SlickWrapper } from './styles';\n\nimport { Overlay, Global } from './styles';\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  _s();\n\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      currentSlide = _useState[0],\n      setCurrentSlide = _useState[1];\n\n  return __jsx(Overlay, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, __jsx(Global, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }), __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }\n  }, __jsx(Slick, {\n    dots: true,\n    initialSlide: 0,\n    afterChange: function afterChange(slide) {\n      return setCurrentSlide(slide);\n    },\n    infinite: true,\n    arrows: false,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 21\n    }\n  }, images.map(function (v) {\n    return (// <ImgWrapper key={v.src}>\n      __jsx(\"img\", {\n        src: v.src,\n        alt: v.src,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 33\n        }\n      }) // </ImgWrapper>\n\n    );\n  }))));\n};\n\n_s(ImagesZoom, \"VQw0KpRgltXDNPWBgmV3GhZXdQE=\");\n\n_c = ImagesZoom;\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImagesZoom\");","map":{"version":3,"names":["PropTypes","React","useState","Slick","Overlay","Global","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","propTypes","arrayOf","object","isRequired","func"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/imagesZoom/index.js"],"sourcesContent":["import PropTypes from 'prop-types';\r\nimport React, { useState } from 'react';\r\nimport Slick from 'react-slick';\r\n//import { Overlay, Global, Header, CloseBtn, ImgWrapper, Indicator, SlickWrapper } from './styles';\r\nimport { Overlay, Global } from './styles';\r\n\r\n\r\n\r\n\r\nconst ImagesZoom = ({images, onClose}) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n    return (\r\n        <Overlay>\r\n            <Global />\r\n            {/* <Header>\r\n                <h1>상세 이미지</h1>\r\n                <CloseBtn onClick={onClose}>X</CloseBtn>\r\n            </Header> */}\r\n            {/* <SlickWrapper> */}\r\n                <div>\r\n                    <Slick\r\n                        dots={true}\r\n                        initialSlide={0}\r\n                        afterChange={(slide) => setCurrentSlide(slide)}\r\n                        infinite\r\n                        arrows={false}\r\n                        slidesToShow={1}\r\n                        slidesToScroll={1}\r\n                    >\r\n                        {images.map((v)=>(\r\n                            // <ImgWrapper key={v.src}>\r\n                                <img src={v.src} alt={v.src} />\r\n                            // </ImgWrapper>\r\n                        ))}\r\n                    </Slick>\r\n                    {/* <Indicator>\r\n                        <div>\r\n                            {currentSlide + 1}\r\n                            {' '}\r\n                            /\r\n                            {images.length}\r\n                        </div>\r\n                    </Indicator> */}\r\n                </div>\r\n            {/* </SlickWrapper> */}\r\n        </Overlay>\r\n    )\r\n}\r\n\r\nImagesZoom.propTypes = {\r\n    images: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n    onClose: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ImagesZoom;"],"mappings":";;;;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,aAAlB,C,CACA;;AACA,SAASC,OAAT,EAAkBC,MAAlB,QAAgC,UAAhC;;AAKA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAuB;EAAA;;EAAA,IAArBC,MAAqB,QAArBA,MAAqB;EAAA,IAAbC,OAAa,QAAbA,OAAa;;EACtC,gBAAwCN,QAAQ,CAAC,CAAD,CAAhD;EAAA,IAAOO,YAAP;EAAA,IAAqBC,eAArB;;EACA,OACI,MAAC,OAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,MAAD;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,EAOQ;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACI,MAAC,KAAD;IACI,IAAI,EAAE,IADV;IAEI,YAAY,EAAE,CAFlB;IAGI,WAAW,EAAE,qBAACC,KAAD;MAAA,OAAWD,eAAe,CAACC,KAAD,CAA1B;IAAA,CAHjB;IAII,QAAQ,MAJZ;IAKI,MAAM,EAAE,KALZ;IAMI,YAAY,EAAE,CANlB;IAOI,cAAc,EAAE,CAPpB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GASKJ,MAAM,CAACK,GAAP,CAAW,UAACC,CAAD;IAAA,OACR;MACI;QAAK,GAAG,EAAEA,CAAC,CAACC,GAAZ;QAAiB,GAAG,EAAED,CAAC,CAACC,GAAxB;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAFI,CAGR;;IAHQ;EAAA,CAAX,CATL,CADJ,CAPR,CADJ;AAoCH,CAtCD;;GAAMR,U;;KAAAA,U;AAwCNA,UAAU,CAACS,SAAX,GAAuB;EACnBR,MAAM,EAAEP,SAAS,CAACgB,OAAV,CAAkBhB,SAAS,CAACiB,MAA5B,EAAoCC,UADzB;EAEnBV,OAAO,EAAER,SAAS,CAACmB,IAAV,CAAeD;AAFL,CAAvB;AAKA,eAAeZ,UAAf"},"metadata":{},"sourceType":"module"}