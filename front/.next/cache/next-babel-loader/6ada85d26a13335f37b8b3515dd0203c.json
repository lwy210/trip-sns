{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _templateObject,\n    _templateObject2,\n    _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\CommentList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useCallback, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\nimport { PictureTwoTone, ScheduleOutlined, ScheduleTwoTone, PictureOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostImages from './PostImages';\nimport CommentForm from './CommentForm';\nimport PostCardContent from './PostCardContent';\nimport FollowButton from './FollowButton';\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\nimport styled from 'styled-components';\nimport PostRoutes from './PostRoutes';\nvar Title = styled.div(_templateObject || (_templateObject = _taggedTemplateLiteral([\"\\n    margin: 10px 10px;\\n    font-weight: bold;\\n\"])));\nvar Icons = styled.div(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral([\"\\n    display: flex;\\n    fontSize: 30px;\\n    margin: 5px 10px;\\n\\n\"])));\n\nvar PostCard = function PostCard(_ref) {\n  _s();\n\n  var post = _ref.post;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      removePostLoading = _useSelector.removePostLoading;\n\n  var _useState = useState(false),\n      liked = _useState[0],\n      setLiked = _useState[1];\n\n  var _useState2 = useState(false),\n      commentFormOpened = _useState2[0],\n      setCommentFormOpened = _useState2[1];\n\n  var _useState3 = useState(true),\n      pictureOrRoute = _useState3[0],\n      setPictureOrRoute = _useState3[1];\n\n  var onToggleLike = useCallback(function () {\n    setLiked(function (prev) {\n      return !prev;\n    }); //true를 false로 false를 true로 만드는 코드\n  }, []);\n  var onTogglePictureOrRoute = useCallback(function () {\n    setPictureOrRoute(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onToggleComment = useCallback(function () {\n    setCommentFormOpened(function (prev) {\n      return !prev;\n    });\n  }, []);\n  var onRemovePost = useCallback(function () {\n    dispatch({\n      type: REMOVE_POST_REQUEST,\n      data: post.id\n    });\n  }, []);\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var id = me === null || me === void 0 ? void 0 : me.id;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, __jsx(CommentForm, {\n    post: post,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }), __jsx(List, {\n    header: \"\".concat(post.Comments.length, \"\\uAC1C\\uC758 \\uB313\\uAE00\"),\n    itemLayout: \"horizontal\",\n    dataSource: post.Comments,\n    renderItem: function renderItem(item) {\n      return __jsx(\"li\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, __jsx(Comment, {\n        author: item.User.nickname,\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 41\n          }\n        }, item.User.nickname[0]),\n        content: item.content,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }));\n};\n\n_s(PostCard, \"H4cIegrJx1Bs0qokzawM2/lNZXs=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PostCard;\nPostCard.propTypes = {\n  post: PropTypes.shape({\n    id: PropTypes.number,\n    User: PropTypes.object,\n    content: PropTypes.string,\n    createdAt: PropTypes.object,\n    Comments: PropTypes.arrayOf(PropTypes.object),\n    Images: PropTypes.arrayOf(PropTypes.object)\n  }).isRequired\n};\nexport default PostCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostCard\");","map":{"version":3,"names":["React","useCallback","useState","PropTypes","Card","Popover","Button","Avatar","List","Comment","PictureTwoTone","ScheduleOutlined","ScheduleTwoTone","PictureOutlined","HeartOutlined","HeartTwoTone","MessageOutlined","EllipsisOutlined","useDispatch","useSelector","PostImages","CommentForm","PostCardContent","FollowButton","REMOVE_POST_REQUEST","styled","PostRoutes","Title","div","Icons","PostCard","post","dispatch","state","removePostLoading","liked","setLiked","commentFormOpened","setCommentFormOpened","pictureOrRoute","setPictureOrRoute","onToggleLike","prev","onTogglePictureOrRoute","onToggleComment","onRemovePost","type","data","id","user","me","Comments","length","item","User","nickname","content","propTypes","shape","number","object","string","createdAt","arrayOf","Images","isRequired"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/CommentList.js"],"sourcesContent":["import React, { useCallback, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Popover, Button, Avatar, List, Comment } from 'antd';\r\nimport { PictureTwoTone, ScheduleOutlined, ScheduleTwoTone, PictureOutlined, HeartOutlined, HeartTwoTone, MessageOutlined, EllipsisOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport PostImages from './PostImages';\r\nimport CommentForm from './CommentForm';\r\nimport PostCardContent from './PostCardContent';\r\nimport FollowButton from './FollowButton';\r\n\r\nimport { REMOVE_POST_REQUEST } from '../reducers/post';\r\nimport styled from 'styled-components';\r\nimport PostRoutes from './PostRoutes';\r\n\r\nconst Title = styled.div`\r\n    margin: 10px 10px;\r\n    font-weight: bold;\r\n`;\r\n\r\nconst Icons = styled.div`\r\n    display: flex;\r\n    fontSize: 30px;\r\n    margin: 5px 10px;\r\n\r\n`;\r\n\r\nconst PostCard = ({ post }) => {\r\n    const dispatch = useDispatch();\r\n    const { removePostLoading } = useSelector((state) => state.post);\r\n    const [liked, setLiked] = useState(false);\r\n    const [commentFormOpened, setCommentFormOpened] = useState(false);\r\n    const [pictureOrRoute, setPictureOrRoute] = useState(true);\r\n\r\n    const onToggleLike = useCallback(() => {\r\n        setLiked((prev) => !prev); //true를 false로 false를 true로 만드는 코드\r\n    }, []);\r\n\r\n    const onTogglePictureOrRoute = useCallback(() => {\r\n        setPictureOrRoute((prev) => !prev);\r\n    }, []);\r\n\r\n    const onToggleComment = useCallback(() => {\r\n        setCommentFormOpened((prev) => !prev);\r\n    }, []);\r\n\r\n    const onRemovePost = useCallback(() => {\r\n        dispatch({\r\n            type: REMOVE_POST_REQUEST,\r\n            data: post.id,\r\n        })\r\n    }, []);\r\n\r\n    const { me } = useSelector((state) => state.user);\r\n    const id = me?.id;\r\n    return (\r\n            <div>\r\n                <CommentForm post={post}/>\r\n                <List \r\n                    header={`${post.Comments.length}개의 댓글`}\r\n                    itemLayout=\"horizontal\"\r\n                    dataSource={post.Comments}\r\n                    renderItem={(item) => (\r\n                        <li>\r\n                            <Comment\r\n                                author={item.User.nickname}\r\n                                avatar={<Avatar>{item.User.nickname[0]}</Avatar>}\r\n                                content={item.content}\r\n                            />\r\n                        </li>\r\n                    )}\r\n                />\r\n            </div>       \r\n    )\r\n};\r\n\r\nPostCard.propTypes = {\r\n    post: PropTypes.shape({\r\n        id: PropTypes.number,\r\n        User: PropTypes.object,\r\n        content: PropTypes.string,\r\n        createdAt: PropTypes.object,\r\n        Comments: PropTypes.arrayOf(PropTypes.object),\r\n        Images: PropTypes.arrayOf(PropTypes.object),\r\n    }).isRequired,\r\n};\r\n\r\nexport default PostCard;"],"mappings":"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"},"metadata":{},"sourceType":"module"}