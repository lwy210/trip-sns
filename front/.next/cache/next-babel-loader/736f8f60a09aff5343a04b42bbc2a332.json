{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\FollowList.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { List, Button, Avatar } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\n\nvar FollowList = function FollowList(_ref) {\n  _s();\n\n  var data = _ref.data,\n      header = _ref.header;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followLoading = _useSelector.followLoading,\n      unfollowLoading = _useSelector.unfollowLoading; // 리덕스에서 내 정보 받아오고\n\n\n  var isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(function (v) {\n    return v.id === data.User.id;\n  }); // 포스트 작성한 사람들 중에 내가 팔로윙한 사람들\n\n  var onClickButton = useCallback(function () {\n    if (isFollowing) {\n      // 내가 팔로잉을 하고 있는데 버튼을 눌렀다\n      dispatch({\n        type: UNFOLLOW_REQUEST,\n        data: post.User.id\n      });\n    } else {\n      dispatch({\n        type: FOLLOW_REQUEST,\n        data: post.User.id\n      });\n    }\n  }, [isFollowing]);\n  return __jsx(List, {\n    bordered: true,\n    itemLayout: \"horizontal\",\n    dataSource: data,\n    renderItem: function renderItem(item) {\n      return __jsx(List.Item, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 17\n        }\n      }, __jsx(List.Item.Meta, {\n        avatar: __jsx(Avatar, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }\n        }, item.nickname[0]),\n        title: item.nickname,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 21\n        }\n      }), __jsx(Button, {\n        loading: followLoading || unfollowLoading,\n        onClick: onClickButton,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }\n      }, isFollowing ? '언팔로우' : '팔로우'));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }); // return (\n  //     <List \n  //         style={{marginBottom: 20}}\n  //         grid={{gutter: 4, xs: 2, md: 3}}\n  //         size=\"small\"\n  //         header={<div>{header}</div>}\n  //         loadMore={<div style={{textAlign: 'center', margin: '10px 0'}}><Button>더 보기</Button></div>}\n  //         bordered\n  //         dataSource={data}\n  //         renderItem={(item) => (\n  //             <List.Item style={{marginTop:20}}>\n  //                 <Card actions={[<StopOutlined key=\"stop\"/>]}>\n  //                     <Card.Meta description={item.nickname} />\n  //                 </Card>\n  //             </List.Item>\n  //         )}\n  //     />\n  // )\n};\n\n_s(FollowList, \"oQRGZ4+MgpAjZ6p1zzrPk3lOofY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = FollowList;\nFollowList.propTypes = {\n  header: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default FollowList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FollowList\");","map":{"version":3,"names":["React","PropTypes","List","Button","Avatar","useDispatch","useSelector","FOLLOW_REQUEST","UNFOLLOW_REQUEST","FollowList","data","header","dispatch","state","user","me","followLoading","unfollowLoading","isFollowing","Followings","find","v","id","User","onClickButton","useCallback","type","post","item","nickname","propTypes","string","isRequired","array"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/FollowList.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { List, Button, Avatar } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { FOLLOW_REQUEST, UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowList = ({data, header}) => {\r\n    const dispatch = useDispatch();\r\n    const { me, followLoading, unfollowLoading } = useSelector((state) => state.user); // 리덕스에서 내 정보 받아오고\r\n    const isFollowing = me?.Followings.find((v) => v.id === data.User.id) // 포스트 작성한 사람들 중에 내가 팔로윙한 사람들\r\n\r\n    const onClickButton = useCallback(() => {\r\n        if (isFollowing) { // 내가 팔로잉을 하고 있는데 버튼을 눌렀다\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        } else {\r\n            dispatch({\r\n                type: FOLLOW_REQUEST,\r\n                data: post.User.id,\r\n            });\r\n        }\r\n    }, [isFollowing]);\r\n\r\n    return (\r\n        <List \r\n            bordered\r\n            itemLayout=\"horizontal\"\r\n            dataSource={data}\r\n            renderItem={(item) => (\r\n                <List.Item>\r\n                    <List.Item.Meta \r\n                    avatar={<Avatar>{item.nickname[0]}</Avatar>}\r\n                    title={item.nickname}\r\n                    />\r\n                    <Button loading={followLoading || unfollowLoading} onClick={onClickButton}>\r\n                    {isFollowing ? '언팔로우' : '팔로우'}\r\n                    </Button>\r\n                </List.Item>\r\n            )}\r\n        />\r\n    )\r\n    // return (\r\n    //     <List \r\n    //         style={{marginBottom: 20}}\r\n    //         grid={{gutter: 4, xs: 2, md: 3}}\r\n    //         size=\"small\"\r\n    //         header={<div>{header}</div>}\r\n    //         loadMore={<div style={{textAlign: 'center', margin: '10px 0'}}><Button>더 보기</Button></div>}\r\n    //         bordered\r\n    //         dataSource={data}\r\n    //         renderItem={(item) => (\r\n    //             <List.Item style={{marginTop:20}}>\r\n    //                 <Card actions={[<StopOutlined key=\"stop\"/>]}>\r\n    //                     <Card.Meta description={item.nickname} />\r\n    //                 </Card>\r\n    //             </List.Item>\r\n    //         )}\r\n    //     />\r\n    // )\r\n};\r\n\r\nFollowList.propTypes = {\r\n    header: PropTypes.string.isRequired,\r\n    data: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default FollowList;"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,MAAvB,QAAqC,MAArC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,gBAAzB,QAAiD,kBAAjD;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAoB;EAAA;;EAAA,IAAlBC,IAAkB,QAAlBA,IAAkB;EAAA,IAAZC,MAAY,QAAZA,MAAY;EACnC,IAAMC,QAAQ,GAAGP,WAAW,EAA5B;;EACA,mBAA+CC,WAAW,CAAC,UAACO,KAAD;IAAA,OAAWA,KAAK,CAACC,IAAjB;EAAA,CAAD,CAA1D;EAAA,IAAQC,EAAR,gBAAQA,EAAR;EAAA,IAAYC,aAAZ,gBAAYA,aAAZ;EAAA,IAA2BC,eAA3B,gBAA2BA,eAA3B,CAFmC,CAEgD;;;EACnF,IAAMC,WAAW,GAAGH,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEI,UAAJ,CAAeC,IAAf,CAAoB,UAACC,CAAD;IAAA,OAAOA,CAAC,CAACC,EAAF,KAASZ,IAAI,CAACa,IAAL,CAAUD,EAA1B;EAAA,CAApB,CAApB,CAHmC,CAGmC;;EAEtE,IAAME,aAAa,GAAGC,WAAW,CAAC,YAAM;IACpC,IAAIP,WAAJ,EAAiB;MAAE;MACfN,QAAQ,CAAC;QACLc,IAAI,EAAElB,gBADD;QAELE,IAAI,EAAEiB,IAAI,CAACJ,IAAL,CAAUD;MAFX,CAAD,CAAR;IAIH,CALD,MAKO;MACHV,QAAQ,CAAC;QACLc,IAAI,EAAEnB,cADD;QAELG,IAAI,EAAEiB,IAAI,CAACJ,IAAL,CAAUD;MAFX,CAAD,CAAR;IAIH;EACJ,CAZgC,EAY9B,CAACJ,WAAD,CAZ8B,CAAjC;EAcA,OACI,MAAC,IAAD;IACI,QAAQ,MADZ;IAEI,UAAU,EAAC,YAFf;IAGI,UAAU,EAAER,IAHhB;IAII,UAAU,EAAE,oBAACkB,IAAD;MAAA,OACR,MAAC,IAAD,CAAM,IAAN;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACI,MAAC,IAAD,CAAM,IAAN,CAAW,IAAX;QACA,MAAM,EAAE,MAAC,MAAD;UAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAA,GAASA,IAAI,CAACC,QAAL,CAAc,CAAd,CAAT,CADR;QAEA,KAAK,EAAED,IAAI,CAACC,QAFZ;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EADJ,EAKI,MAAC,MAAD;QAAQ,OAAO,EAAEb,aAAa,IAAIC,eAAlC;QAAmD,OAAO,EAAEO,aAA5D;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,GACCN,WAAW,GAAG,MAAH,GAAY,KADxB,CALJ,CADQ;IAAA,CAJhB;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,EADJ,CAnBmC,CAqCnC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACH,CAvDD;;GAAMT,U;UACeJ,W,EAC8BC,W;;;KAF7CG,U;AAyDNA,UAAU,CAACqB,SAAX,GAAuB;EACnBnB,MAAM,EAAEV,SAAS,CAAC8B,MAAV,CAAiBC,UADN;EAEnBtB,IAAI,EAAET,SAAS,CAACgC,KAAV,CAAgBD;AAFH,CAAvB;AAKA,eAAevB,UAAf"},"metadata":{},"sourceType":"module"}