{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leeoo\\\\Desktop\\\\teamProject\\\\front\\\\components\\\\FollowButton.js\";\nvar __jsx = React.createElement;\nimport React, { useCallback } from 'react';\nimport { Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\n\nconst FollowButton = ({\n  post\n}) => {\n  const {\n    me,\n    followLoading,\n    unfollowLoading\n  } = useSelector(state => state.user); // 리덕스에서 내 정보 받아오고\n\n  const isFollowing = me === null || me === void 0 ? void 0 : me.Followings.find(v => v.id === post.User.id); // 포스트 작성한 사람들 중에 내가 팔로윙한 사람들\n\n  const onClickButton = useCallback(() => {\n    if (isFollowing) {\n      // 내가 팔로잉을 하고 있는데 버튼을 눌렀다\n      dispatch({\n        type: UNFOLLOW_REQUEST\n      });\n    }\n  }, [isFollowing]);\n  return __jsx(Button, {\n    loading: followLoading || unfollowLoading,\n    onClickButton: onClickButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }\n  }, isFollowing ? '언팔로우' : '팔로우');\n};\n\nFollowButton.propTypes = {\n  // object말고 shape가 더 좋은 코드이니 여러분은 shape로 하세요\n  post: PropTypes.object.isRequired\n};\nexport default FollowButton;","map":{"version":3,"names":["React","useCallback","Button","PropTypes","useSelector","UNFOLLOW_REQUEST","FollowButton","post","me","followLoading","unfollowLoading","state","user","isFollowing","Followings","find","v","id","User","onClickButton","dispatch","type","propTypes","object","isRequired"],"sources":["C:/Users/leeoo/Desktop/teamProject/front/components/FollowButton.js"],"sourcesContent":["import React, { useCallback } from 'react';\r\nimport { Button } from 'antd';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { UNFOLLOW_REQUEST } from '../reducers/user';\r\n\r\nconst FollowButton = ({ post }) => {\r\n    const { me, followLoading, unfollowLoading } = useSelector((state) => state.user); // 리덕스에서 내 정보 받아오고\r\n    const isFollowing = me?.Followings.find((v) => v.id === post.User.id) // 포스트 작성한 사람들 중에 내가 팔로윙한 사람들\r\n    const onClickButton = useCallback(() => {\r\n        if (isFollowing) { // 내가 팔로잉을 하고 있는데 버튼을 눌렀다\r\n            dispatch({\r\n                type: UNFOLLOW_REQUEST,\r\n            })\r\n        }\r\n    }, [isFollowing]);\r\n    \r\n    return (\r\n        <Button loading={followLoading || unfollowLoading} onClickButton={onClickButton}>\r\n            {isFollowing ? '언팔로우' : '팔로우'}\r\n        </Button>\r\n    );\r\n};\r\n\r\nFollowButton.propTypes = {\r\n    // object말고 shape가 더 좋은 코드이니 여러분은 shape로 하세요\r\n    post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default FollowButton;"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,QAAmC,OAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,kBAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;EAAEC;AAAF,CAAD,KAAc;EAC/B,MAAM;IAAEC,EAAF;IAAMC,aAAN;IAAqBC;EAArB,IAAyCN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAlB,CAA1D,CAD+B,CACoD;;EACnF,MAAMC,WAAW,GAAGL,EAAH,aAAGA,EAAH,uBAAGA,EAAE,CAAEM,UAAJ,CAAeC,IAAf,CAAqBC,CAAD,IAAOA,CAAC,CAACC,EAAF,KAASV,IAAI,CAACW,IAAL,CAAUD,EAA9C,CAApB,CAF+B,CAEuC;;EACtE,MAAME,aAAa,GAAGlB,WAAW,CAAC,MAAM;IACpC,IAAIY,WAAJ,EAAiB;MAAE;MACfO,QAAQ,CAAC;QACLC,IAAI,EAAEhB;MADD,CAAD,CAAR;IAGH;EACJ,CANgC,EAM9B,CAACQ,WAAD,CAN8B,CAAjC;EAQA,OACI,MAAC,MAAD;IAAQ,OAAO,EAAEJ,aAAa,IAAIC,eAAlC;IAAmD,aAAa,EAAES,aAAlE;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACKN,WAAW,GAAG,MAAH,GAAY,KAD5B,CADJ;AAKH,CAhBD;;AAkBAP,YAAY,CAACgB,SAAb,GAAyB;EACrB;EACAf,IAAI,EAAEJ,SAAS,CAACoB,MAAV,CAAiBC;AAFF,CAAzB;AAKA,eAAelB,YAAf"},"metadata":{},"sourceType":"module"}